{"name": "test_comments_moment[dict13]", "status": "broken", "statusDetails": {"message": "json.decoder.JSONDecodeError: Extra data: line 1 column 3 (char 2)", "trace": "self = <testcase.test_moment.TestMoment object at 0x000001F13CF04278>\ndict1 = {'content': 'I like you!', 'to_uid': '100000012'}\n\n    @allure.step(\"多条动态评论\")\n    @pytest.mark.parametrize(\"dict1\",load_data(\"comments_moment\"))\n    def test_comments_moment(self,dict1):\n        allure.attach(\"yml文件数据，{}\".format(dict1))\n        to_uid=dict1[\"to_uid\"]\n        content=dict1[\"content\"]\n        # 提取已发布动态的cid\n        cid = self._test_load_json()[0][\"circle\"][\"cid\"]\n        allure.attach(\"提取发动态用户的动态ID，{}\".format(cid))\n        # 提取发布者uid\n        uid = self._test_load_json()[0][\"user\"][\"uid\"]\n        allure.attach(\"提取发动态用户uid，{}\".format(uid))\n>       result = self.moment.comment_moments(uid=to_uid,cid=str(cid),content=str(content),ownerId=str(uid),targetUid=str(uid))\n\ntest_moment.py:127: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\micoapi\\moment.py:64: in comment_moments\n    r = self.send(self.with_open()[\"comment_moments\"])\n..\\Base\\Base.py:63: in send\n    return result.json()\n..\\venv\\lib\\site-packages\\requests\\models.py:900: in json\n    return complexjson.loads(self.text, **kwargs)\nD:\\python37\\lib\\json\\__init__.py:348: in loads\n    return _default_decoder.decode(s)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <json.decoder.JSONDecoder object at 0x000001F13C233710>\ns = '50x - Error\\n'\n_w = <built-in method match of re.Pattern object at 0x000001F13C1C6330>\n\n    def decode(self, s, _w=WHITESPACE.match):\n        \"\"\"Return the Python representation of ``s`` (a ``str`` instance\n        containing a JSON document).\n    \n        \"\"\"\n        obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n        end = _w(s, end).end()\n        if end != len(s):\n>           raise JSONDecodeError(\"Extra data\", s, end)\nE           json.decoder.JSONDecodeError: Extra data: line 1 column 3 (char 2)\n\nD:\\python37\\lib\\json\\decoder.py:340: JSONDecodeError"}, "steps": [{"name": "多条动态评论", "status": "broken", "statusDetails": {"message": "json.decoder.JSONDecodeError: Extra data: line 1 column 3 (char 2)\n", "trace": "  File \"D:\\MicoApi\\venv\\lib\\site-packages\\allure_commons\\_allure.py\", line 172, in impl\n    return func(*a, **kw)\n  File \"D:\\MicoApi\\testcase\\test_moment.py\", line 127, in test_comments_moment\n    result = self.moment.comment_moments(uid=to_uid,cid=str(cid),content=str(content),ownerId=str(uid),targetUid=str(uid))\n  File \"D:\\MicoApi\\micoapi\\moment.py\", line 64, in comment_moments\n    r = self.send(self.with_open()[\"comment_moments\"])\n  File \"D:\\MicoApi\\Base\\Base.py\", line 63, in send\n    return result.json()\n  File \"D:\\MicoApi\\venv\\lib\\site-packages\\requests\\models.py\", line 900, in json\n    return complexjson.loads(self.text, **kwargs)\n  File \"D:\\python37\\lib\\json\\__init__.py\", line 348, in loads\n    return _default_decoder.decode(s)\n  File \"D:\\python37\\lib\\json\\decoder.py\", line 340, in decode\n    raise JSONDecodeError(\"Extra data\", s, end)\n"}, "steps": [{"name": "内置读取json文件调用方法", "status": "passed", "attachments": [{"source": "4e223be4-f628-4be6-9595-4e7853786a09-attachment.attach"}], "start": 1612592240122, "stop": 1612592240125}, {"name": "内置读取json文件调用方法", "status": "passed", "attachments": [{"source": "912a7932-3cba-4870-a04c-c3e34180962e-attachment.attach"}], "start": 1612592240126, "stop": 1612592240129}], "attachments": [{"source": "67352b3d-7d8b-4245-987a-21a7a4ac4f73-attachment.attach"}, {"source": "60894b38-b57c-48f3-9b56-8020b6927360-attachment.attach"}, {"source": "24d7b66e-14a0-432a-84e2-8a9f749c55fb-attachment.attach"}], "parameters": [{"name": "dict1", "value": "{'to_uid': '100000012', 'content': 'I like you!'}"}], "start": 1612592240121, "stop": 1612592240523}], "parameters": [{"name": "dict1", "value": "{'to_uid': '100000012', 'content': 'I like you!'}"}], "start": 1612592240121, "stop": 1612592240573, "uuid": "bfeeb37a-d27b-4be0-8bf8-9302506bfb24", "historyId": "8fd6413bf13c556acf00cc011b596494", "testCaseId": "e7f38aa056749fcd75ff2d3ecdcf9ab0", "fullName": "testcase.test_moment.TestMoment#test_comments_moment", "labels": [{"name": "feature", "value": "动态相关接口"}, {"name": "parentSuite", "value": "testcase"}, {"name": "suite", "value": "test_moment"}, {"name": "subSuite", "value": "TestMoment"}, {"name": "host", "value": "LAPTOP-RM5T1M8J"}, {"name": "thread", "value": "32276-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcase.test_moment"}]}